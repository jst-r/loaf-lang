WHITESPACE = _{ " " | "\t" | NEWLINE }

integer = @{
    ASCII_DIGIT+
}

identifier = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

primary = _{
    integer
  | identifier
  | group_expression
  | block_expression
}

group_expression = _{ "(" ~ expr ~ ")" }
block_expression =  { "{" ~ declaration* ~ "}" }

bin_op = _{ assign | add_assign | subtract_assign | add | subtract | multiply | divide }

add             = { "+" }
subtract        = { "-" }
multiply        = { "*" }
divide          = { "/" }
assign          = { "=" }
add_assign      = { "+=" }
subtract_assign = { "-=" }

prefix = _{ negate }
negate =  { "-" }

op_expression = _{ prefix? ~ primary ~ (bin_op ~ prefix? ~ primary)* }

expr = { op_expression }

expr_stmt   =  { expr ~ ";" }
return_stmt =  { "return" ~ expr ~ ";" }
statement   = _{ expr_stmt | return_stmt }

var_declaration =  { "let" ~ identifier ~ "=" ~ expr ~ ";" }
declaration     = _{ var_declaration | statement }

program = _{ SOI ~ declaration* ~ EOI }
